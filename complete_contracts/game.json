{
  "source": {
    "hash": "0x8116c54316d7f607002c4ef1e8bdd595b5ace1f01454a63e3a1d9448f7a12609",
    "language": "ink! 5.0.0-alpha",
    "compiler": "rustc 1.70.0",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "4.0.0-alpha",
      "rust_toolchain": "stable-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "squink_splash",
    "version": "0.1.0",
    "authors": [
      "Parity Technologies <admin@parity.io>"
    ]
  },
  "image": null,
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "dimensions",
            "type": {
              "displayName": [
                "Field"
              ],
              "type": 23
            }
          },
          {
            "label": "buy_in",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 17
            }
          },
          {
            "label": "forming_rounds",
            "type": {
              "displayName": [
                "u32"
              ],
              "type": 0
            }
          },
          {
            "label": "rounds",
            "type": {
              "displayName": [
                "u32"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          "Create a new game.",
          "",
          "- `dimensions`: (width, height) of the board.",
          "- `buy_in`: The amount of balance each player needs to submit in order to play.",
          "- `forming_rounds`: Number of blocks that needs to pass until anyone can start the game.",
          "- `rounds`: The number of blocks a game can be played for.",
          "- `score_multiplier`: The higher the more score you get per field.",
          "- `gas_per_round`: The amount of gas each player can use. Unused gas is carried over to the next round."
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 24
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 1
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 17
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 0
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 40
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 39
      },
      "maxEventTopics": 4,
      "staticBufferSize": 16384,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 13
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [
              "The player contract account ID."
            ],
            "indexed": false,
            "label": "player",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "docs": [
          "A player joined the game by calling [`register_player`]."
        ],
        "label": "PlayerRegistered",
        "module_path": "squink_splash::contract",
        "signature_topic": "0x2850b06a1bca384ae578496f02f3c1c14b155bf0348a852d91db89ee0cf782a8"
      },
      {
        "args": [
          {
            "docs": [
              "The number of rounds played."
            ],
            "indexed": false,
            "label": "rounds_played",
            "type": {
              "displayName": [],
              "type": 0
            }
          }
        ],
        "docs": [
          "The rounds played have increased. This is used for the client side to keep",
          "the [`TurnTaken`] events and \"Blocks\" UI in sync. Events are emitted before",
          "block number changes, so re-fetching [`rounds_played`] on a block change",
          "causes a brief delay in the UI."
        ],
        "label": "RoundIncremented",
        "module_path": "squink_splash::contract",
        "signature_topic": "0x7e5711495fd0dcc0c904ccdee65571d5199d30184525d096ad20c71c673bbd49"
      },
      {
        "args": [
          {
            "docs": [
              "The account start called [`start_game`]."
            ],
            "indexed": false,
            "label": "starter",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "docs": [
          "Someone started the game by calling [`start_game`]."
        ],
        "label": "GameStarted",
        "module_path": "squink_splash::contract",
        "signature_topic": "0xa7f211327600754572b916aaf9fec24c78cc185a1a4703221e8db0f2d345c068"
      },
      {
        "args": [
          {
            "docs": [
              "The player that attempted the turn."
            ],
            "indexed": false,
            "label": "player",
            "type": {
              "displayName": [],
              "type": 1
            }
          },
          {
            "docs": [
              "The effect of the turn that was performed by the player."
            ],
            "indexed": false,
            "label": "outcome",
            "type": {
              "displayName": [],
              "type": 38
            }
          }
        ],
        "docs": [
          "A player attempted to make a turn."
        ],
        "label": "TurnTaken",
        "module_path": "squink_splash::contract",
        "signature_topic": "0x14784a9c5dca1a438d9d6a670fe963d39a05124cd1eec3145c93a5441deb7604"
      },
      {
        "args": [
          {
            "docs": [
              "The account that ended the game."
            ],
            "indexed": false,
            "label": "ender",
            "type": {
              "displayName": [],
              "type": 1
            }
          }
        ],
        "docs": [
          "Someone ended the game by calling [`end_game`].",
          "",
          "This event doesn't contain information about the winner because the contract still",
          "exists. Interested parties can read this information from the contract by calling",
          "[`state`] and [`player_scores`]."
        ],
        "label": "GameEnded",
        "module_path": "squink_splash::contract",
        "signature_topic": "0x00123af96a1a04b55bf01e99b923a501b2e0c1a657f68a863495f93209f43498"
      },
      {
        "args": [
          {
            "docs": [
              "The winning player who is also the one who destroyed the contract."
            ],
            "indexed": false,
            "label": "winner",
            "type": {
              "displayName": [],
              "type": 11
            }
          }
        ],
        "docs": [
          "The game ended and the winner destroyed the contract."
        ],
        "label": "GameDestroyed",
        "module_path": "squink_splash::contract",
        "signature_topic": "0xaf3e9deb4729f430eab43ad37048265acead3564fa054ebd021683284e44bc36"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 25
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " When the game is in finished the contract can be deleted by the winner."
        ],
        "label": "destroy",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0xc7e248e4"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Anyone can start the game when `earliest_start` is reached."
        ],
        "label": "start_game",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x0dad731d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " When enough time has passed, no new turns can be submitted.",
          " Then anybody may call this function to end the game and",
          " trigger the payout to the winner."
        ],
        "label": "end_game",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0xc76d285a"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 1
            }
          },
          {
            "label": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 12
            }
          }
        ],
        "default": false,
        "docs": [
          " Add a new player to the game. Only allowed while the game has not started."
        ],
        "label": "register_player",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0x44c9d826"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " This is the actual game loop.",
          "",
          " It can be called by anyone and triggers at most one turn",
          " of the game per block."
        ],
        "label": "submit_turn",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 24
        },
        "selector": "0xd73c7bba"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " The buy-in amount to register a player."
        ],
        "label": "buy_in_amount",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x3bd6cf8d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " The total amount of rounds this game is to be played for."
        ],
        "label": "total_rounds",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x98e2054a"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " How much gas each player is allowed to use per round."
        ],
        "label": "gas_limit",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 28
        },
        "selector": "0x58f2a0ae"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Describes into many groups the players should be partitioned.",
          "",
          " How often [`submit_turn`] needs to be called until all players",
          " made a turn."
        ],
        "label": "num_batches",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0xb0e1bfe3"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " How much gas each player is allowed to consume for the whole game."
        ],
        "label": "gas_budget",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 28
        },
        "selector": "0x45617f0d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " The current game state."
        ],
        "label": "state",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 29
        },
        "selector": "0x0ced162a"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns `true` if the game is running."
        ],
        "label": "is_running",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 30
        },
        "selector": "0x1b0e6452"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " List of all players sorted by score and gas costs."
        ],
        "label": "players_sorted",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 32
        },
        "selector": "0x2952cc11"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the dimensions of the board."
        ],
        "label": "dimensions",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 33
        },
        "selector": "0xf10dee95"
      },
      {
        "args": [
          {
            "label": "coord",
            "type": {
              "displayName": [
                "Field"
              ],
              "type": 23
            }
          }
        ],
        "default": false,
        "docs": [
          " Returns the value (owner) of the supplied field."
        ],
        "label": "field",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 34
        },
        "selector": "0x4abe8f1b"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Returns the complete board.",
          "",
          " The index into the vector is calculated as `x + y * width`."
        ],
        "label": "board",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 36
        },
        "selector": "0x276086cb"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "State",
                  "variants": {
                    "0": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 0
                            }
                          },
                          "name": "earliest_start"
                        }
                      ],
                      "name": "Forming"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 0
                            }
                          },
                          "name": "rounds_played"
                        }
                      ],
                      "name": "Running"
                    },
                    "2": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 1
                            }
                          },
                          "name": "winner"
                        }
                      ],
                      "name": "Finished"
                    }
                  }
                }
              },
              "name": "state"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0xb93a8c6e",
                              "ty": 1
                            }
                          },
                          "name": "owner"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0xb93a8c6e",
                              "ty": 0
                            }
                          },
                          "name": "claimed_at"
                        }
                      ],
                      "name": "FieldEntry"
                    }
                  },
                  "root_key": "0xb93a8c6e",
                  "ty": 4
                }
              },
              "name": "board"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "x"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 0
                        }
                      },
                      "name": "y"
                    }
                  ],
                  "name": "Field"
                }
              },
              "name": "dimensions"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x900fc968",
                      "ty": 10
                    }
                  },
                  "root_key": "0x900fc968",
                  "ty": 14
                }
              },
              "name": "players"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 17
                }
              },
              "name": "buy_in"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "rounds"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0xecf15311",
                      "ty": 0
                    }
                  },
                  "root_key": "0xecf15311",
                  "ty": 18
                }
              },
              "name": "last_turn"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 1
                }
              },
              "name": "opener"
            }
          ],
          "name": "SquinkSplash"
        }
      },
      "root_key": "0x00000000",
      "ty": 21
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 2,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 3
          }
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "K",
            "type": 0
          },
          {
            "name": "V",
            "type": 5
          },
          {
            "name": "KeyType",
            "type": 6
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "mapping",
          "Mapping"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "owner",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "claimed_at",
                "type": 0,
                "typeName": "u32"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "FieldEntry"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 7
          },
          {
            "name": "R",
            "type": 8
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "composite": {}
        },
        "path": [
          "ink_storage_traits",
          "impls",
          "AutoKey"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 9
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "sequence": {
            "type": 11
          }
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "id",
                "type": 1,
                "typeName": "AccountId"
              },
              {
                "name": "name",
                "type": 12,
                "typeName": "String"
              },
              {
                "name": "gas_used",
                "type": 13,
                "typeName": "u64"
              },
              {
                "name": "score",
                "type": 13,
                "typeName": "u64"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "Player"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "V",
            "type": 10
          },
          {
            "name": "KeyType",
            "type": 15
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "Lazy"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 7
          },
          {
            "name": "R",
            "type": 16
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 9
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "V",
            "type": 0
          },
          {
            "name": "KeyType",
            "type": 19
          }
        ],
        "path": [
          "ink_storage",
          "lazy",
          "Lazy"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "L",
            "type": 7
          },
          {
            "name": "R",
            "type": 20
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ResolverKey"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "composite": {}
        },
        "params": [
          {
            "name": "ParentKey",
            "type": 9
          }
        ],
        "path": [
          "ink_storage_traits",
          "impls",
          "ManualKey"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "state",
                "type": 22,
                "typeName": "<State as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<601258301u32, ()>,>>::Type"
              },
              {
                "name": "board",
                "type": 4,
                "typeName": "<Mapping<u32, FieldEntry> as::ink::storage::traits::\nAutoStorableHint<::ink::storage::traits::ManualKey<3107621998u32,\n()>,>>::Type"
              },
              {
                "name": "dimensions",
                "type": 23,
                "typeName": "<Field as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<1923064889u32, ()>,>>::Type"
              },
              {
                "name": "players",
                "type": 14,
                "typeName": "<Lazy<Vec<Player>> as::ink::storage::traits::AutoStorableHint<\n::ink::storage::traits::ManualKey<2416953704u32, ()>,>>::Type"
              },
              {
                "name": "buy_in",
                "type": 17,
                "typeName": "<Balance as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<1342253748u32, ()>,>>::Type"
              },
              {
                "name": "rounds",
                "type": 0,
                "typeName": "<u32 as::ink::storage::traits::AutoStorableHint<::ink::storage\n::traits::ManualKey<2873533396u32, ()>,>>::Type"
              },
              {
                "name": "last_turn",
                "type": 18,
                "typeName": "<Lazy<u32> as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3975238417u32, ()>,>>::Type"
              },
              {
                "name": "opener",
                "type": 1,
                "typeName": "<AccountId as::ink::storage::traits::AutoStorableHint<::ink::\nstorage::traits::ManualKey<3920887395u32, ()>,>>::Type"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "SquinkSplash"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "name": "earliest_start",
                    "type": 0,
                    "typeName": "u32"
                  }
                ],
                "index": 0,
                "name": "Forming"
              },
              {
                "fields": [
                  {
                    "name": "rounds_played",
                    "type": 0,
                    "typeName": "u32"
                  }
                ],
                "index": 1,
                "name": "Running"
              },
              {
                "fields": [
                  {
                    "name": "winner",
                    "type": 1,
                    "typeName": "AccountId"
                  }
                ],
                "index": 2,
                "name": "Finished"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "State"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "x",
                "type": 0,
                "typeName": "u32"
              },
              {
                "name": "y",
                "type": 0,
                "typeName": "u32"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "Field"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 17
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 13
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 13
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 22
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 31
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 31
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 23
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 35
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 35
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 37
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 37
          },
          {
            "name": "E",
            "type": 25
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "sequence": {
            "type": 35
          }
        }
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "name": "turn",
                    "type": 23,
                    "typeName": "Field"
                  }
                ],
                "index": 0,
                "name": "Success"
              },
              {
                "fields": [
                  {
                    "name": "turn",
                    "type": 23,
                    "typeName": "Field"
                  }
                ],
                "index": 1,
                "name": "OutOfBounds"
              },
              {
                "fields": [
                  {
                    "name": "turn",
                    "type": 23,
                    "typeName": "Field"
                  },
                  {
                    "name": "player",
                    "type": 1,
                    "typeName": "AccountId"
                  }
                ],
                "index": 2,
                "name": "Occupied"
              },
              {
                "index": 3,
                "name": "BrokenPlayer"
              },
              {
                "index": 4,
                "name": "NoTurn"
              },
              {
                "index": 5,
                "name": "BudgetExhausted"
              }
            ]
          }
        },
        "path": [
          "squink_splash",
          "contract",
          "TurnOutcome"
        ]
      }
    },
    {
      "id": 39,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 2,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 40,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}